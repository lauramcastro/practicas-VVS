OBJETIVO
	Prueba del método atender() de un Especialista en estado Saturado. Análoga
	a la prueba de recibir().

	CASO 2: El Especialista ya ha descansado lo suficiente.

SETUP
	1. Crear una Recepción.
	2. Crear un Especialista.
	3. Crear un Cliente con una Tarea costosa (ej. Primos < 2^28).
	4. Poner al Cliente a la espera en Recepción invocando entrar().
	5. Invocar el método recibir() del Especialista.
	6. Invocar el método atender() del Especialista.
	7. Crear un Cliente con una Tarea cualquiera.
	8. Poner al Cliente a la espera en Recepción invocando entrar().
	2. Repetir hasta que "saturación" = 2:
	   - Invocar el método atender()

ENTRADAS
	- Especialista en estado Saturado.
	- Cola de Recepción con 1 Cliente.

SALIDAS ESPERADAS
	- Valor de retorno: Ninguno
	- Especialista en estado Disponible.
	- Cola de Recepción con 1 Cliente.

CLEANUP
	- Eliminar el Cliente, el Especialista y la Recepción.

OBSERVACIONES
	El método atender() en estado Saturado nunca realiza la Tarea del Cliente.
	En este sentido, es idéntico al método atender() de la superclase
	EstadoEspecialista. Sin embargo, cada vez que se invoca atender() en estado
	Saturado, el atributo "saturación" decrece. Hay que estudiar si tiene
	sentido que esto sea así, o si simplemente se debería invocar al método de 
	la superclase.

	Si el método recuperación() decrementa "saturación" en dos unidades cada vez,
	la comprobación == 0 podría no cumplirse nunca. Habría que cambiarla por
	<= 0 o decrementar en una unidad cada vez.
