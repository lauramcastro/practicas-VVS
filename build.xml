<?xml version="1.0"?>
<project name="SpotiVVSy (almacén de contenidos)" default="compile" basedir=".">
  <description>
    Proyecto de prácticas para la asignatura VVS (curso 2015/2016).
  </description>
  
<!-- ============================  Properties ============================== -->

<property name="src"        value="${basedir}/src"                />
<property name="lib"        value="${basedir}/lib/ui.jar"         />
<property name="test"       value="${basedir}/test"               />
<property name="classes"    value="${basedir}/build"              />
<property name="javadoc"    value="${basedir}/doc/html"           />
<property name="cobertura"  value="${basedir}/doc/cobertura"    />
<property name="classescov" value="${basedir}/build/instrumented" />
<property name="version"    value="0.2"                           />

<path id="classpath.base">
  <pathelement location="${classes}" />
  <pathelement location="${lib}"     />
</path>

<path id="classpath.test">
  <pathelement location="${basedir}/lib/junit4.jar" />
  <pathelement location="${basedir}/lib/mockito.jar" />
  <pathelement location="${test}" />
  <path refid="classpath.base"    />
</path>

<path id="classpath.cobertura">
  <pathelement location="${basedir}/lib/cobertura.jar" />
  <pathelement location="${basedir}/lib/log4j.jar" />
  <path refid="classpath.test" />
</path>

<!-- =========================== "cobertura" task ========================== -->

<taskdef classpathref="classpath.cobertura" resource="tasks.properties" />

<!-- ============================ "init" target ============================ -->

<target name="init">
  <echo>
--------------------------------------------------------------------------------
Processing "${ant.project.name} ${version}" ...
--------------------------------------------------------------------------------
  </echo>
</target>

<!-- ============================ "all" target ============================= -->

<target name="all" depends="clean,compile,javadoc"/>

<!-- ========================== "compile" target =========================== -->

<target name="compile" depends="init">
  <mkdir dir="${classes}"/>
  <javac  srcdir="${src}" 
	  destdir="${classes}"
	  includes="**/*.java"
	  includeantruntime="false">
    <compilerarg value="-Xlint:unchecked"/>
    <classpath refid="classpath.base" />
  </javac>
</target>

<!-- ============================ "test" target ============================ -->

<target name="test" depends="clean,init">
  <mkdir dir="${classes}"/>
  <javac  srcdir="${src}"
	  destdir="${classes}"
	  includes="**/*.java"
	  includeantruntime="false"
	  debug="true">
    <compilerarg value="-Xlint:unchecked"/>
    <classpath refid="classpath.base" />
  </javac>
  <javac  srcdir="${test}"
	  destdir="${classes}"
	  includes="**/*.java"
	  includeantruntime="false">
    <compilerarg value="-Xlint:unchecked"/>
    <compilerarg value="-Xlint:deprecation"/>
    <classpath refid="classpath.test" />
  </javac>
  <junit haltonfailure="yes">
    <classpath location="${classescov}" />
    <classpath location="${classes}" />
    <classpath refid="classpath.cobertura"  />
    <formatter type="brief" usefile="false" />
    <batchtest fork="yes">
      <fileset dir="${test}" includes="**/*Test.java"/>
    </batchtest>
    <sysproperty key="net.sourceforge.cobertura.datafile"
		 file="${basedir}/build/cobertura.ser" />
  </junit>
  <cobertura-report format="html" destdir="${cobertura}" srcdir="${src}"/>
</target>

<!-- ============================ "clean" target =========================== -->

<target	name="clean" depends="init">
  <delete dir="${classes}" />
  <delete dir="${javadoc}" />
  <delete dir="${cobertura}" />
  <delete verbose="true">
    <fileset dir="${src}" defaultexcludes="false">
      <include name="**/*~"/>
    </fileset>
    <fileset dir="${test}" defaultexcludes="false">
      <include name="**/*~"/>
    </fileset>
  </delete>
  <delete file="cobertura.ser" />
</target>

<!-- ========================= "run" target =========================== -->

<target name="run" depends="compile">
  <java classname="Main" fork="true">
    <classpath refid="classpath.base" />
  </java>
</target>

<!-- ========================= "javadoc" target =========================== -->

<target name="javadoc" depends="init">
  <delete dir="${javadoc}"/>
  <mkdir dir="${javadoc}"/>
  <javadoc packagenames="contenido.*,almacen.*,cliente.*"
	   sourcepath="${src}"
	   classpath="${classpath.base}"
	   destdir="${javadoc}"
	   private="yes"
	   windowtitle="${name}"
	   doctitle="${name} ${version}"
	   header="${name} ${version}"
	   bottom="${name} ${version}"/>
</target>

</project>
